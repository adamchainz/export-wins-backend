# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-08-24 11:23
from __future__ import unicode_literals

from django.db import migrations


migration_map = {
    'post:AE': {'dubai': "post:UAE - Dubai",
                'dhabi': "post:UAE - Abu Dhabi"},
    'post:AF': {'brussels': "post:Belgium - Brussels"},
    'post:AR': {'buenos': "post:Argentina - Buenos Aires"},
    'post:AT': {None: "post:Austria - Vienna",
                'vienna': "post:Austria - Vienna",
                'austria': "post:Austria - Vienna"},
    'post:AU': {'melbourne': "post:Australia - Melbourne",
                'sydney': "post:Australia - Sydney"},
    'post:BA': {'sarajevo': "post:Bosnia and Herzegovina - Sarajevo"},
    'post:BB': {'bridgetown': "post:Barbados - Bridgetown"},
    'post:BD': {None: "post:Bangladesh - Dhaka",
                'dhaka': "post:Bangladesh - Dhaka"},
    'post:BE': {None: "post:Belgium - Brussels",
                'brussels': "post:Belgium - Brussels",
                'belgium': "post:Belgium - Brussels"},
    'post:BN': {None: "post:Brunei - Bandar Seri Begawan"},
    'post:BR': {'rio': "post:Brazil - Rio de Janeiro",
                'janeiro': "post:Brazil - Rio de Janeiro",
                'paulo': "post:Brazil - Sao Paulo"},
    'post:CA': {'calgary': "post:Canada - Calgary",
                'toronto': "post:Canada - Toronto"},
    'post:CH': {'bern': "post:Switzerland - Berne",
                'geneva': "post:Switzerland - Geneva"},
    'post:CN': {'beijing': "post:China - Beijing",
                'chongqing': "post:China - Chongqing",
                'guangzhou': "post:China - Guangzhou",
                'shangha': "post:China - Shanghai"},
    'post:CO': {None: "post:Colombia - Bogota",
                'bogota': "post:Colombia - Bogota"},
    'post:CR': {None: "post:Costa Rica - San Jose",
                'san jose': "post:Costa Rica - San Jose"},
    'post:CZ': {'prague': "post:Czech Republic - Prague"},
    'post:DE': {'berlin': "post:Germany - Berlin",
                'dusseldorf': "post:Germany - Dusseldorf",
                'munich': "post:Germany - Munich"},
    'post:DK': {'copenhagen': "post:Denmark - Copenhagen",
                '': "post:Denmark - Copenhagen"},
    'post:EC': {'quito': "post:Ecuador - Quito"},
    'post:EG': {'cairo': "post:Egypt - Cairo"},
    'post:ES': {'madrid': "post:Spain - Madrid",
                'barcelona': "post:Spain - Barcelona"},
    'post:FI': {'': "post:Finland - Helsinki",
                'helsinki': "post:Finland - Helsinki"},
    'post:FR': {'paris': "post:France - Paris",
                'lyon': "post:France - Lyon",
                'leon': "post:France - Lyon",
                'bord': "post:France - Bordeaux"},
    'post:GH': {'': "post:Ghana - Accra",
                'Accra': "post:Ghana - Accra"},
    'post:GR': {'athens': "post:Greece - Athens"},
    'post:HK': {None: "post:Hong Kong",
                'kong': "post:Hong Kong",
                'macau': "post:Hong Kong"},
    'post:HR': {'zagreb': "post:Croatia - Zagreb"},
    'post:IE': {'': "post:Ireland - Dublin",
                'dublin': "post:Ireland - Dublin"},
    'post:ID': {None: "post:Indonesia - Jakarta",
                'jakarta': "post:Indonesia - Jakarta"},
    'post:IN': {'ahmedabad': "post:India - Ahmedabad",
                'chandigarh': "post:India - Chandigarh",
                'mumbai': "post:India - Mumbai",
                'kolkata': "post:India - Kolkata",
                'delhi': "post:India - New Delhi"},
    'post:IQ': {'baghdad': "post:Iraq - Baghdad"},
    'post:IS': {None: "post:Iceland - Reykjavik"},
    'post:IT': {'milan': "post:Italy - Milan",
                'rome': "post:Italy - Rome"},
    'post:JM': {'jamaica': "post:Jamaica - Kingston"},
    'post:JO': {'amman': "post:Jordan - Amman"},
    'post:JP': {'osaka': "post:Japan - Osaka",
                'tokyo': "post:Japan - Tokyo"},
    'post:KE': {'nairobi': "post:Kenya - Nairobi"},
    'post:KR': {'seoul': "post:South Korea - Seoul"},
    'post:KW': {'kuwait': "post:Kuwait"},
    'post:KZ': {'atyrau': "post:Kazakhstan - Atyrau",
                'astana': "post:Kazakhstan - Astana"},
    'post:LK': {'colombo': "post:Sri Lanka - Colombo"},
    'post:MN': {'ulaanbaatar': "post:Mongolia - Ulaanbaatar"},
    'post:MU': {'louis': "post:Mauritius - Port Louis",
                'mau': "post:Mauritius - Port Louis"},
    'post:MX': {'mexico': "post:Mexico - Mexico City",
                'monterrey': "post:Mexico - Monterrey"},
    'post:MY': {'kuala': "post:Malaysia - Kuala Lumpur",
                'alaysia': "post:Malaysia - Kuala Lumpur"},
    'post:NG': {'lagos': "post:Nigeria - Lagos"},
    'post:NL': {None: "post:Netherlands - The Hague",
                'hague': "post:Netherlands - The Hague"},
    'post:OM': {None: "post:Oman - Muscat",
                'muscat': "post:Oman - Muscat"},
    'post:PE': {'lima': "post:Peru - Lima"},
    'post:PH': {'manila': "post:Philippines - Manila"},
    'post:PL': {'warsaw': "post:Poland - Warsaw",
                'polan': "post:Poland - Warsaw"},
    'post:PT': {'lisbon': "post:Portugal - Lisbon"},
    'post:QA': {None: "post:Qatar - Doha",
                'qatar': "post:Qatar - Doha",
                'doha': "post:Qatar - Doha"},
    'post:RU': {'moscow': "post:Russia - Moscow",
                'ekaterinburg': "post:Russia - Ekaterinburg",
                'petersburg': "post:Russia - St Petersburg"},
    'post:SA': {'khobar': "post:Saudi Arabia - Al Khobar",
                'jeddah': "post:Saudi Arabia - Jeddah",
                'riyad': "post:Saudi Arabia - Riyadh"},
    'post:SG': {None: "post:Singapore",
                'singapore': "post:Singapore"},
    'post:SK': {'bratislava': "post:Slovakia - Bratislava"},
    'post:SE': {'stockholm': "post:Sweden - Stockholm",
                'sweden': "post:Sweden - Stockholm"},
    'post:TR': {'izmir': "post:Turkey - Izmir",
                'istanbul': "post:Turkey - Istanbul"},
    'post:TH': {'bangkok': "post:Thailand - Bangkok"},
    'post:TW': {'taipei': "post:Taiwan - Taipei"},
    'post:UA': {'kyiv': "post:Ukraine - Kyiv",
                'kiev': "post:Ukraine - Kyiv",
                'ukr': "post:Ukraine - Kyiv"},
    'post:US': {'washington': "post:USA - Washington DC",
                'york': "post:USA - New York",
                'ny': "post:USA - New York",
                'miami': "post:USA - Miami",
                'angeles': "post:USA - Los Angeles",
                'houston': "post:USA - Houston",
                'chicago': "post:USA - Chicago",
                'atlanta': "post:USA - Atlanta",
                'boston': "post:USA - Boston",
                'francisco': "post:USA - San Francisco",
                },
    'post:VN': {'hanoi': "post:Vietnam - Hanoi",
                'minh': "post:Vietnam - Ho Chi Minh City"},
    'post:NZ': {'land': "post:New Zealand - Auckland"},
    'post:RO': {'rest': "post:Romania - Bucharest"},
    'post:NO': {'oslo': "post:Norway - Oslo",
                'norway': "post:Norway - Oslo"},
    'post:TT': {None: "post:Trinidad and Tobago - Port of Spain",
                'spain': "post:Trinidad and Tobago - Port of Spain"},
    'post:PA': {'panama': "post:Panama - Panama City"},
    'post:SD': {'sudan': "post:Sudan - Khartoum"},
    'post:TZ': {'tanzania': "post:Tanzania - Dar es Salaam",
                'salaam': "post:Tanzania - Dar es Salaam"},
    'post:ZA': {'johannesburg': "post:South Africa - Johannesburg"},
    'post:UG': {None: "post:Uganda - Kampala"},
}


def update_team(obj):
    """ for post hq_team, map country and text of location to new country - city
    data.
    """
    if not obj.hq_team.startswith('post'):
        return
    if obj.hq_team not in migration_map:
        print("post not recognized", obj.hq_team, 'with location', obj.location, 'for object', obj.id)
        obj.hq_team = 'post:Unknown'
        obj.save()
        return
    loc_snippet_to_new_post = migration_map[obj.hq_team]
    input_location = obj.location.lower()
    for loc_snippet, new_post in loc_snippet_to_new_post.items():
        if loc_snippet is None and input_location == '':
            print("found blank for team {} updating to {}".format(
                obj.hq_team, input_location, new_post
            ))
            obj.hq_team = new_post
            obj.save()
            break
        if (loc_snippet is not None and loc_snippet in input_location):
            print("found snippet {} in location {} for team {}, updating to {}".format(
                loc_snippet, input_location, obj.hq_team, new_post
            ))
            obj.hq_team = new_post
            obj.save()
            break
    else:
        print("location ambiguous or otherwise cannot be mapped to post", obj.hq_team, 'location', obj.location, 'for object', obj.id)
        obj.hq_team = 'post:Unknown'
        obj.save()


def update(apps, schema_editor):
    Win = apps.get_model('wins', 'Win')
    wins = Win.objects.all().order_by('hq_team')
    for w in wins:
        update_team(w)

    Advisor = apps.get_model('wins', 'Advisor')
    advisors = Advisor.objects.all().order_by('hq_team')
    for a in advisors:
        update_team(a)


class Migration(migrations.Migration):

    dependencies = [
        ('wins', '0022_merge'),
    ]

    operations = [
        migrations.RunPython(update),
    ]
